name: CI-CD

on:
  push:
    branches: [ "main" ]
    paths:
      - "app/**"
      - "k8s/**"
      - ".github/workflows/ci-cd.yaml"

env:
  AWS_REGION: ap-southeast-2
  EKS_CLUSTER: sideproj-eks
  K8S_NAMESPACE: sideproj
  HARBOR_URL: harbor.czhuang.dev
  HARBOR_PROJECT: sideproj
  IMAGE_NAME: web

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Set TAG
        id: vars
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Docker login to Harbor
        run: echo "${{ secrets.HARBOR_PASSWORD }}" | docker login ${{ env.HARBOR_URL }}                   -u "${{ secrets.HARBOR_USERNAME }}" --password-stdin

      - name: Build
        run: |
          docker build -t $HARBOR_URL/$HARBOR_PROJECT/$IMAGE_NAME:${TAG} ./app
          docker tag $HARBOR_URL/$HARBOR_PROJECT/$IMAGE_NAME:${TAG} $HARBOR_URL/$HARBOR_PROJECT/$IMAGE_NAME:latest

      - name: Push
        run: |
          docker push $HARBOR_URL/$HARBOR_PROJECT/$IMAGE_NAME:${TAG}
          docker push $HARBOR_URL/$HARBOR_PROJECT/$IMAGE_NAME:latest

      - name: Export image ref
        run: echo "IMAGE_REF=$HARBOR_URL/$HARBOR_PROJECT/$IMAGE_NAME:${TAG}" >> $GITHUB_OUTPUT
        id: image

    outputs:
      image_ref: ${{ steps.image.outputs.IMAGE_REF }}

  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GHA_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl && sudo mv kubectl /usr/local/bin/
          kubectl version --client

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name $EKS_CLUSTER --region $AWS_REGION

      - name: Ensure namespace
        run: kubectl apply -f k8s/namespace.yaml

      - name: Create/Update Harbor imagePullSecret
        run: |
          kubectl -n $K8S_NAMESPACE delete secret harbor-regcred --ignore-not-found
          kubectl -n $K8S_NAMESPACE create secret docker-registry harbor-regcred                 --docker-server=${HARBOR_URL}                 --docker-username='${{ secrets.HARBOR_USERNAME }}'                 --docker-password='${{ secrets.HARBOR_PASSWORD }}'

      - name: Apply manifests
        run: |
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/deployment.yaml

      - name: Set image to new tag
        env:
          IMAGE_REF: ${{ needs.build-push.outputs.image_ref }}
        run: |
          kubectl -n $K8S_NAMESPACE set image deploy/web web=${IMAGE_REF}
          kubectl -n $K8S_NAMESPACE rollout status deploy/web --timeout=180s
